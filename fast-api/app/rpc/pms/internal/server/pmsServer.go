// Code generated by goctl. DO NOT EDIT.
// Source: pms.proto

package server

import (
	"context"

	"fast-boot/app/rpc/pms/internal/logic"
	"fast-boot/app/rpc/pms/internal/svc"
	"fast-boot/app/rpc/pms/pmsPb"
)

type PmsServer struct {
	svcCtx *svc.ServiceContext
	pmsPb.UnimplementedPmsServer
}

func NewPmsServer(svcCtx *svc.ServiceContext) *PmsServer {
	return &PmsServer{
		svcCtx: svcCtx,
	}
}

func (s *PmsServer) ShopGet(ctx context.Context, in *pmsPb.IdReq) (*pmsPb.Shop, error) {
	l := logic.NewShopGetLogic(ctx, s.svcCtx)
	return l.ShopGet(in)
}

func (s *PmsServer) ShopList(ctx context.Context, in *pmsPb.ListReq) (*pmsPb.ShopListResp, error) {
	l := logic.NewShopListLogic(ctx, s.svcCtx)
	return l.ShopList(in)
}

func (s *PmsServer) ShopAdd(ctx context.Context, in *pmsPb.ShopForm) (*pmsPb.SuccessIdResp, error) {
	l := logic.NewShopAddLogic(ctx, s.svcCtx)
	return l.ShopAdd(in)
}

func (s *PmsServer) ShopUpdate(ctx context.Context, in *pmsPb.ShopForm) (*pmsPb.SuccessResp, error) {
	l := logic.NewShopUpdateLogic(ctx, s.svcCtx)
	return l.ShopUpdate(in)
}

func (s *PmsServer) ShopDel(ctx context.Context, in *pmsPb.IdsReq) (*pmsPb.SuccessResp, error) {
	l := logic.NewShopDelLogic(ctx, s.svcCtx)
	return l.ShopDel(in)
}

func (s *PmsServer) ShopOptions(ctx context.Context, in *pmsPb.AnyReq) (*pmsPb.OptionsResp, error) {
	l := logic.NewShopOptionsLogic(ctx, s.svcCtx)
	return l.ShopOptions(in)
}

func (s *PmsServer) PmsCategoryGet(ctx context.Context, in *pmsPb.IdReq) (*pmsPb.PmsCategory, error) {
	l := logic.NewPmsCategoryGetLogic(ctx, s.svcCtx)
	return l.PmsCategoryGet(in)
}

func (s *PmsServer) PmsCategoryList(ctx context.Context, in *pmsPb.PmsCategoryListReq) (*pmsPb.PmsCategoryListResp, error) {
	l := logic.NewPmsCategoryListLogic(ctx, s.svcCtx)
	return l.PmsCategoryList(in)
}

func (s *PmsServer) PmsCategoryAdd(ctx context.Context, in *pmsPb.PmsCategoryForm) (*pmsPb.SuccessIdResp, error) {
	l := logic.NewPmsCategoryAddLogic(ctx, s.svcCtx)
	return l.PmsCategoryAdd(in)
}

func (s *PmsServer) PmsCategoryUpdate(ctx context.Context, in *pmsPb.PmsCategoryForm) (*pmsPb.SuccessResp, error) {
	l := logic.NewPmsCategoryUpdateLogic(ctx, s.svcCtx)
	return l.PmsCategoryUpdate(in)
}

func (s *PmsServer) PmsCategoryDel(ctx context.Context, in *pmsPb.IdsReq) (*pmsPb.SuccessResp, error) {
	l := logic.NewPmsCategoryDelLogic(ctx, s.svcCtx)
	return l.PmsCategoryDel(in)
}

func (s *PmsServer) PmsCategoryOptions(ctx context.Context, in *pmsPb.IdReq) (*pmsPb.RepOptionsResp, error) {
	l := logic.NewPmsCategoryOptionsLogic(ctx, s.svcCtx)
	return l.PmsCategoryOptions(in)
}

func (s *PmsServer) PmsCategoryAttributeList(ctx context.Context, in *pmsPb.PmsCategoryAttributeListReq) (*pmsPb.PmsCategoryAttributeListResp, error) {
	l := logic.NewPmsCategoryAttributeListLogic(ctx, s.svcCtx)
	return l.PmsCategoryAttributeList(in)
}

func (s *PmsServer) PmsCategoryAttributeAdd(ctx context.Context, in *pmsPb.PmsCategoryAttributeAddReq) (*pmsPb.SuccessResp, error) {
	l := logic.NewPmsCategoryAttributeAddLogic(ctx, s.svcCtx)
	return l.PmsCategoryAttributeAdd(in)
}

func (s *PmsServer) PmsBrandGet(ctx context.Context, in *pmsPb.IdReq) (*pmsPb.PmsBrand, error) {
	l := logic.NewPmsBrandGetLogic(ctx, s.svcCtx)
	return l.PmsBrandGet(in)
}

func (s *PmsServer) PmsBrandList(ctx context.Context, in *pmsPb.PmsBrandListReq) (*pmsPb.PmsBrandListResp, error) {
	l := logic.NewPmsBrandListLogic(ctx, s.svcCtx)
	return l.PmsBrandList(in)
}

func (s *PmsServer) PmsBrandAdd(ctx context.Context, in *pmsPb.PmsBrandForm) (*pmsPb.SuccessIdResp, error) {
	l := logic.NewPmsBrandAddLogic(ctx, s.svcCtx)
	return l.PmsBrandAdd(in)
}

func (s *PmsServer) PmsBrandUpdate(ctx context.Context, in *pmsPb.PmsBrandForm) (*pmsPb.SuccessResp, error) {
	l := logic.NewPmsBrandUpdateLogic(ctx, s.svcCtx)
	return l.PmsBrandUpdate(in)
}

func (s *PmsServer) PmsBrandDel(ctx context.Context, in *pmsPb.IdsReq) (*pmsPb.SuccessResp, error) {
	l := logic.NewPmsBrandDelLogic(ctx, s.svcCtx)
	return l.PmsBrandDel(in)
}

func (s *PmsServer) PmsBrandOptions(ctx context.Context, in *pmsPb.IdReq) (*pmsPb.OptionsResp, error) {
	l := logic.NewPmsBrandOptionsLogic(ctx, s.svcCtx)
	return l.PmsBrandOptions(in)
}

func (s *PmsServer) PmsGoodsList(ctx context.Context, in *pmsPb.PmsGoodsListReq) (*pmsPb.PmsGoodsListResp, error) {
	l := logic.NewPmsGoodsListLogic(ctx, s.svcCtx)
	return l.PmsGoodsList(in)
}

func (s *PmsServer) PmsGoodsGet(ctx context.Context, in *pmsPb.IdReq) (*pmsPb.PmsGoodsInfo, error) {
	l := logic.NewPmsGoodsGetLogic(ctx, s.svcCtx)
	return l.PmsGoodsGet(in)
}

func (s *PmsServer) PmsGoodsDel(ctx context.Context, in *pmsPb.IdsReq) (*pmsPb.SuccessResp, error) {
	l := logic.NewPmsGoodsDelLogic(ctx, s.svcCtx)
	return l.PmsGoodsDel(in)
}

func (s *PmsServer) PmsGoodsEdit(ctx context.Context, in *pmsPb.PmsGoodsForm) (*pmsPb.SuccessIdResp, error) {
	l := logic.NewPmsGoodsEditLogic(ctx, s.svcCtx)
	return l.PmsGoodsEdit(in)
}
