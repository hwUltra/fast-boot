// Code generated by goctl. DO NOT EDIT.
// Source: oms.proto

package server

import (
	"context"

	"fast-boot/app/rpc/oms/internal/logic"
	"fast-boot/app/rpc/oms/internal/svc"
	"fast-boot/app/rpc/oms/omsPb"
)

type OmsServer struct {
	svcCtx *svc.ServiceContext
	omsPb.UnimplementedOmsServer
}

func NewOmsServer(svcCtx *svc.ServiceContext) *OmsServer {
	return &OmsServer{
		svcCtx: svcCtx,
	}
}

// -------
func (s *OmsServer) OrderGet(ctx context.Context, in *omsPb.IdReq) (*omsPb.Order, error) {
	l := logic.NewOrderGetLogic(ctx, s.svcCtx)
	return l.OrderGet(in)
}

func (s *OmsServer) OrderList(ctx context.Context, in *omsPb.ListReq) (*omsPb.OrderListResp, error) {
	l := logic.NewOrderListLogic(ctx, s.svcCtx)
	return l.OrderList(in)
}

func (s *OmsServer) OrderAdd(ctx context.Context, in *omsPb.OrderAddReq) (*omsPb.SuccessIdResp, error) {
	l := logic.NewOrderAddLogic(ctx, s.svcCtx)
	return l.OrderAdd(in)
}

func (s *OmsServer) OrderUpdate(ctx context.Context, in *omsPb.OrderUpdateReq) (*omsPb.SuccessResp, error) {
	l := logic.NewOrderUpdateLogic(ctx, s.svcCtx)
	return l.OrderUpdate(in)
}
