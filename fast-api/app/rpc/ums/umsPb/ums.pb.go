// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: pb/ums.proto

package umsPb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ------------------------------------
// Common Message
// ------------------------------------
type IdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdReq) Reset() {
	*x = IdReq{}
	mi := &file_pb_ums_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdReq) ProtoMessage() {}

func (x *IdReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ums_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdReq.ProtoReflect.Descriptor instead.
func (*IdReq) Descriptor() ([]byte, []int) {
	return file_pb_ums_proto_rawDescGZIP(), []int{0}
}

func (x *IdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids string `protobuf:"bytes,1,opt,name=ids,proto3" json:"ids,omitempty"`
}

func (x *IdsReq) Reset() {
	*x = IdsReq{}
	mi := &file_pb_ums_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdsReq) ProtoMessage() {}

func (x *IdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ums_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdsReq.ProtoReflect.Descriptor instead.
func (*IdsReq) Descriptor() ([]byte, []int) {
	return file_pb_ums_proto_rawDescGZIP(), []int{1}
}

func (x *IdsReq) GetIds() string {
	if x != nil {
		return x.Ids
	}
	return ""
}

type IdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdResp) Reset() {
	*x = IdResp{}
	mi := &file_pb_ums_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdResp) ProtoMessage() {}

func (x *IdResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ums_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdResp.ProtoReflect.Descriptor instead.
func (*IdResp) Descriptor() ([]byte, []int) {
	return file_pb_ums_proto_rawDescGZIP(), []int{2}
}

func (x *IdResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SuccessResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SuccessResp) Reset() {
	*x = SuccessResp{}
	mi := &file_pb_ums_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuccessResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessResp) ProtoMessage() {}

func (x *SuccessResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ums_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessResp.ProtoReflect.Descriptor instead.
func (*SuccessResp) Descriptor() ([]byte, []int) {
	return file_pb_ums_proto_rawDescGZIP(), []int{3}
}

type SuccessIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SuccessIdResp) Reset() {
	*x = SuccessIdResp{}
	mi := &file_pb_ums_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuccessIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessIdResp) ProtoMessage() {}

func (x *SuccessIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ums_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessIdResp.ProtoReflect.Descriptor instead.
func (*SuccessIdResp) Descriptor() ([]byte, []int) {
	return file_pb_ums_proto_rawDescGZIP(), []int{4}
}

func (x *SuccessIdResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// --------------------------------学校-用户收货地址表--------------------------------
type UserAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`               //ID
	ShopId    int64  `protobuf:"varint,2,opt,name=shopId,proto3" json:"shopId,omitempty"`       //店铺id
	Uid       int64  `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`             //用户ID
	Name      string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`            //联系人
	Mobile    string `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`        //手机号
	Area      string `protobuf:"bytes,6,opt,name=area,proto3" json:"area,omitempty"`            //学校地址
	Info      string `protobuf:"bytes,7,opt,name=info,proto3" json:"info,omitempty"`            //详细地址
	IsDefault int64  `protobuf:"varint,8,opt,name=isDefault,proto3" json:"isDefault,omitempty"` //是否默认
	CreatedAt string `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`  //createdAt
}

func (x *UserAddress) Reset() {
	*x = UserAddress{}
	mi := &file_pb_ums_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAddress) ProtoMessage() {}

func (x *UserAddress) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ums_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAddress.ProtoReflect.Descriptor instead.
func (*UserAddress) Descriptor() ([]byte, []int) {
	return file_pb_ums_proto_rawDescGZIP(), []int{5}
}

func (x *UserAddress) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserAddress) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *UserAddress) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserAddress) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserAddress) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserAddress) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *UserAddress) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *UserAddress) GetIsDefault() int64 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *UserAddress) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type UserAddressListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAddress []*UserAddress `protobuf:"bytes,1,rep,name=userAddress,proto3" json:"userAddress,omitempty"` //userAddress
}

func (x *UserAddressListResp) Reset() {
	*x = UserAddressListResp{}
	mi := &file_pb_ums_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserAddressListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAddressListResp) ProtoMessage() {}

func (x *UserAddressListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ums_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAddressListResp.ProtoReflect.Descriptor instead.
func (*UserAddressListResp) Descriptor() ([]byte, []int) {
	return file_pb_ums_proto_rawDescGZIP(), []int{6}
}

func (x *UserAddressListResp) GetUserAddress() []*UserAddress {
	if x != nil {
		return x.UserAddress
	}
	return nil
}

// --------------------------------用户购物表--------------------------------
type UserCarts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`               //ID
	ShopId    int64  `protobuf:"varint,2,opt,name=shopId,proto3" json:"shopId,omitempty"`       //店铺id
	Uid       int64  `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`             //用户id
	GoodsId   int64  `protobuf:"varint,4,opt,name=goodsId,proto3" json:"goodsId,omitempty"`     //商品id
	GoodsName string `protobuf:"bytes,5,opt,name=goodsName,proto3" json:"goodsName,omitempty"`  //商品名称
	Checked   int64  `protobuf:"varint,6,opt,name=checked,proto3" json:"checked,omitempty"`     //购物车中商品是否选择状态
	PicUrl    string `protobuf:"bytes,7,opt,name=picUrl,proto3" json:"picUrl,omitempty"`        //商品图片或者商品货品图片
	Num       int64  `protobuf:"varint,8,opt,name=num,proto3" json:"num,omitempty"`             //数量
	SkuId     int64  `protobuf:"varint,9,opt,name=skuId,proto3" json:"skuId,omitempty"`         //sku id
	Spec      string `protobuf:"bytes,10,opt,name=spec,proto3" json:"spec,omitempty"`           //spec
	SpecStr   string `protobuf:"bytes,11,opt,name=specStr,proto3" json:"specStr,omitempty"`     //spec 描述
	CreatedAt string `protobuf:"bytes,12,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //createdAt
}

func (x *UserCarts) Reset() {
	*x = UserCarts{}
	mi := &file_pb_ums_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserCarts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCarts) ProtoMessage() {}

func (x *UserCarts) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ums_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCarts.ProtoReflect.Descriptor instead.
func (*UserCarts) Descriptor() ([]byte, []int) {
	return file_pb_ums_proto_rawDescGZIP(), []int{7}
}

func (x *UserCarts) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserCarts) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *UserCarts) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserCarts) GetGoodsId() int64 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *UserCarts) GetGoodsName() string {
	if x != nil {
		return x.GoodsName
	}
	return ""
}

func (x *UserCarts) GetChecked() int64 {
	if x != nil {
		return x.Checked
	}
	return 0
}

func (x *UserCarts) GetPicUrl() string {
	if x != nil {
		return x.PicUrl
	}
	return ""
}

func (x *UserCarts) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *UserCarts) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *UserCarts) GetSpec() string {
	if x != nil {
		return x.Spec
	}
	return ""
}

func (x *UserCarts) GetSpecStr() string {
	if x != nil {
		return x.SpecStr
	}
	return ""
}

func (x *UserCarts) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// --------------------------------用户反馈表--------------------------------
type UserFeedback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`               //id
	ShopId    int64  `protobuf:"varint,2,opt,name=shopId,proto3" json:"shopId,omitempty"`       //店铺ID
	Uid       int64  `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`             //用户ID
	TypeId    int64  `protobuf:"varint,4,opt,name=typeId,proto3" json:"typeId,omitempty"`       //反馈类型
	Title     string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`          //标题
	Content   string `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`      //反馈内容
	TrueName  int64  `protobuf:"varint,7,opt,name=trueName,proto3" json:"trueName,omitempty"`   //是否实名
	CallMust  int64  `protobuf:"varint,8,opt,name=callMust,proto3" json:"callMust,omitempty"`   //是否电话回复
	Status    int64  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`       //状态0未处理  1已处理
	Responses string `protobuf:"bytes,10,opt,name=responses,proto3" json:"responses,omitempty"` //回复意见
	CreatedAt string `protobuf:"bytes,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //createdAt
}

func (x *UserFeedback) Reset() {
	*x = UserFeedback{}
	mi := &file_pb_ums_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserFeedback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFeedback) ProtoMessage() {}

func (x *UserFeedback) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ums_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFeedback.ProtoReflect.Descriptor instead.
func (*UserFeedback) Descriptor() ([]byte, []int) {
	return file_pb_ums_proto_rawDescGZIP(), []int{8}
}

func (x *UserFeedback) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserFeedback) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *UserFeedback) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserFeedback) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *UserFeedback) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UserFeedback) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UserFeedback) GetTrueName() int64 {
	if x != nil {
		return x.TrueName
	}
	return 0
}

func (x *UserFeedback) GetCallMust() int64 {
	if x != nil {
		return x.CallMust
	}
	return 0
}

func (x *UserFeedback) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UserFeedback) GetResponses() string {
	if x != nil {
		return x.Responses
	}
	return ""
}

func (x *UserFeedback) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// --------------------------------第三方登录表--------------------------------
type UserThird struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                    //id
	Uid          string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`                   //会员ID
	Platform     string `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`         //第三方应用
	Openid       string `protobuf:"bytes,4,opt,name=openid,proto3" json:"openid,omitempty"`             //第三方唯一ID
	Unionid      string `protobuf:"bytes,5,opt,name=unionid,proto3" json:"unionid,omitempty"`           //小程序unionid
	Nickname     string `protobuf:"bytes,6,opt,name=nickname,proto3" json:"nickname,omitempty"`         //第三方会员昵称
	Avatar       string `protobuf:"bytes,7,opt,name=avatar,proto3" json:"avatar,omitempty"`             //第三方会员头像
	AccessToken  string `protobuf:"bytes,8,opt,name=accessToken,proto3" json:"accessToken,omitempty"`   //access_token
	RefreshToken string `protobuf:"bytes,9,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"` //refresh_token
	CreatedAt    string `protobuf:"bytes,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`      //createdAt
}

func (x *UserThird) Reset() {
	*x = UserThird{}
	mi := &file_pb_ums_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserThird) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserThird) ProtoMessage() {}

func (x *UserThird) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ums_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserThird.ProtoReflect.Descriptor instead.
func (*UserThird) Descriptor() ([]byte, []int) {
	return file_pb_ums_proto_rawDescGZIP(), []int{9}
}

func (x *UserThird) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserThird) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UserThird) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *UserThird) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *UserThird) GetUnionid() string {
	if x != nil {
		return x.Unionid
	}
	return ""
}

func (x *UserThird) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserThird) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserThird) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *UserThird) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *UserThird) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// --------------------------------users--------------------------------
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                //id
	Mobile    string         `protobuf:"bytes,2,opt,name=mobile,proto3" json:"mobile,omitempty"`         //电话号码
	Username  string         `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`     //姓名
	Nickname  string         `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`     //昵称
	Avatar    string         `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`         //头像
	IdCard    string         `protobuf:"bytes,6,opt,name=idCard,proto3" json:"idCard,omitempty"`         //身份证号码
	Gender    int64          `protobuf:"varint,7,opt,name=gender,proto3" json:"gender,omitempty"`        //性别 0 未知 1男 2女
	Signature string         `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature,omitempty"`   //签名
	Birthday  string         `protobuf:"bytes,9,opt,name=birthday,proto3" json:"birthday,omitempty"`     //生日
	Tags      string         `protobuf:"bytes,10,opt,name=tags,proto3" json:"tags,omitempty"`            //tags
	Source    string         `protobuf:"bytes,11,opt,name=source,proto3" json:"source,omitempty"`        //来源，APP H5
	SourceUid int64          `protobuf:"varint,12,opt,name=sourceUid,proto3" json:"sourceUid,omitempty"` //邀请uid
	CreatedAt string         `protobuf:"bytes,13,opt,name=createdAt,proto3" json:"createdAt,omitempty"`  //createdAt
	Addresses []*UserAddress `protobuf:"bytes,14,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_pb_ums_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ums_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_pb_ums_proto_rawDescGZIP(), []int{10}
}

func (x *User) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *User) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *User) GetIdCard() string {
	if x != nil {
		return x.IdCard
	}
	return ""
}

func (x *User) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *User) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *User) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *User) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *User) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *User) GetSourceUid() int64 {
	if x != nil {
		return x.SourceUid
	}
	return 0
}

func (x *User) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *User) GetAddresses() []*UserAddress {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type UserForm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                //id
	Mobile    string `protobuf:"bytes,2,opt,name=mobile,proto3" json:"mobile,omitempty"`         //电话号码
	Username  string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`     //姓名
	Nickname  string `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`     //昵称
	Avatar    string `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`         //头像
	IdCard    string `protobuf:"bytes,6,opt,name=idCard,proto3" json:"idCard,omitempty"`         //身份证号码
	Gender    int64  `protobuf:"varint,7,opt,name=gender,proto3" json:"gender,omitempty"`        //性别 0 未知 1男 2女
	Signature string `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature,omitempty"`   //签名
	Birthday  string `protobuf:"bytes,9,opt,name=birthday,proto3" json:"birthday,omitempty"`     //生日
	Tags      string `protobuf:"bytes,10,opt,name=tags,proto3" json:"tags,omitempty"`            //tags
	Source    string `protobuf:"bytes,11,opt,name=source,proto3" json:"source,omitempty"`        //来源，APP H5
	SourceUid int64  `protobuf:"varint,12,opt,name=sourceUid,proto3" json:"sourceUid,omitempty"` //邀请uid
}

func (x *UserForm) Reset() {
	*x = UserForm{}
	mi := &file_pb_ums_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserForm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserForm) ProtoMessage() {}

func (x *UserForm) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ums_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserForm.ProtoReflect.Descriptor instead.
func (*UserForm) Descriptor() ([]byte, []int) {
	return file_pb_ums_proto_rawDescGZIP(), []int{11}
}

func (x *UserForm) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserForm) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserForm) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserForm) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserForm) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserForm) GetIdCard() string {
	if x != nil {
		return x.IdCard
	}
	return ""
}

func (x *UserForm) GetGender() int64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *UserForm) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *UserForm) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *UserForm) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *UserForm) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *UserForm) GetSourceUid() int64 {
	if x != nil {
		return x.SourceUid
	}
	return 0
}

type OpenIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenId string `protobuf:"bytes,2,opt,name=openId,proto3" json:"openId,omitempty"` //openId
}

func (x *OpenIdReq) Reset() {
	*x = OpenIdReq{}
	mi := &file_pb_ums_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenIdReq) ProtoMessage() {}

func (x *OpenIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ums_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenIdReq.ProtoReflect.Descriptor instead.
func (*OpenIdReq) Descriptor() ([]byte, []int) {
	return file_pb_ums_proto_rawDescGZIP(), []int{12}
}

func (x *OpenIdReq) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

type BindReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mobile string `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"` //电话号码
	OpenId string `protobuf:"bytes,2,opt,name=openId,proto3" json:"openId,omitempty"` //openId
}

func (x *BindReq) Reset() {
	*x = BindReq{}
	mi := &file_pb_ums_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BindReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindReq) ProtoMessage() {}

func (x *BindReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ums_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindReq.ProtoReflect.Descriptor instead.
func (*BindReq) Descriptor() ([]byte, []int) {
	return file_pb_ums_proto_rawDescGZIP(), []int{13}
}

func (x *BindReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *BindReq) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

type UserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"` //昵称
	Avatar   string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`     //头像
	Mobile   string `protobuf:"bytes,4,opt,name=mobile,proto3" json:"mobile,omitempty"`     //mobile
	Token    string `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *UserInfoResp) Reset() {
	*x = UserInfoResp{}
	mi := &file_pb_ums_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoResp) ProtoMessage() {}

func (x *UserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ums_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoResp.ProtoReflect.Descriptor instead.
func (*UserInfoResp) Descriptor() ([]byte, []int) {
	return file_pb_ums_proto_rawDescGZIP(), []int{14}
}

func (x *UserInfoResp) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserInfoResp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserInfoResp) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserInfoResp) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserInfoResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type PageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keywords string `protobuf:"bytes,1,opt,name=keywords,proto3" json:"keywords,omitempty"`
	PageNum  int64  `protobuf:"varint,2,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	PageSize int64  `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *PageReq) Reset() {
	*x = PageReq{}
	mi := &file_pb_ums_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageReq) ProtoMessage() {}

func (x *PageReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ums_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageReq.ProtoReflect.Descriptor instead.
func (*PageReq) Descriptor() ([]byte, []int) {
	return file_pb_ums_proto_rawDescGZIP(), []int{15}
}

func (x *PageReq) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *PageReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *PageReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type UserPageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*User `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64   `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *UserPageResp) Reset() {
	*x = UserPageResp{}
	mi := &file_pb_ums_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserPageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPageResp) ProtoMessage() {}

func (x *UserPageResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ums_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPageResp.ProtoReflect.Descriptor instead.
func (*UserPageResp) Descriptor() ([]byte, []int) {
	return file_pb_ums_proto_rawDescGZIP(), []int{16}
}

func (x *UserPageResp) GetList() []*User {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *UserPageResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type UserThirdPageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*UserThird `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64        `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *UserThirdPageResp) Reset() {
	*x = UserThirdPageResp{}
	mi := &file_pb_ums_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserThirdPageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserThirdPageResp) ProtoMessage() {}

func (x *UserThirdPageResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_ums_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserThirdPageResp.ProtoReflect.Descriptor instead.
func (*UserThirdPageResp) Descriptor() ([]byte, []int) {
	return file_pb_ums_proto_rawDescGZIP(), []int{17}
}

func (x *UserThirdPageResp) GetList() []*UserThird {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *UserThirdPageResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_pb_ums_proto protoreflect.FileDescriptor

var file_pb_ums_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x62, 0x2f, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x75, 0x6d, 0x73, 0x50, 0x62, 0x22, 0x17, 0x0a, 0x05, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1a,
	0x0a, 0x06, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x18, 0x0a, 0x06, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x0d, 0x0a, 0x0b, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x1f, 0x0a, 0x0d, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xd7, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72,
	0x65, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x4b,
	0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x6d, 0x73,
	0x50, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xa3, 0x02, 0x0a, 0x09,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x72, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f,
	0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x63, 0x55, 0x72, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x69, 0x63, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a,
	0x03, 0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x65,
	0x63, 0x53, 0x74, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x65, 0x63,
	0x53, 0x74, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x9c, 0x02, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x72, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x4d, 0x75, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x4d, 0x75, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x93, 0x02, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x82, 0x03, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x43, 0x61, 0x72,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75,
	0x6d, 0x73, 0x50, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0xb6, 0x02, 0x0a, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x55, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x55, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x07, 0x42, 0x69, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70,
	0x65, 0x6e, 0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5b, 0x0a, 0x07, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x45, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x75, 0x6d, 0x73, 0x50, 0x62, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x4f, 0x0a,
	0x11, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x75, 0x6d, 0x73, 0x50, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69,
	0x72, 0x64, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0x8a,
	0x03, 0x0a, 0x03, 0x75, 0x6d, 0x73, 0x12, 0x31, 0x0a, 0x08, 0x42, 0x79, 0x4f, 0x70, 0x65, 0x6e,
	0x49, 0x64, 0x12, 0x10, 0x2e, 0x75, 0x6d, 0x73, 0x50, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x75, 0x6d, 0x73, 0x50, 0x62, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x04, 0x42, 0x69, 0x6e,
	0x64, 0x12, 0x0e, 0x2e, 0x75, 0x6d, 0x73, 0x50, 0x62, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x13, 0x2e, 0x75, 0x6d, 0x73, 0x50, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x12, 0x0c, 0x2e, 0x75, 0x6d, 0x73, 0x50, 0x62, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x0b, 0x2e, 0x75, 0x6d, 0x73, 0x50, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x2e, 0x75, 0x6d, 0x73, 0x50, 0x62,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x75, 0x6d, 0x73, 0x50, 0x62,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a,
	0x07, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x12, 0x0f, 0x2e, 0x75, 0x6d, 0x73, 0x50, 0x62,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x1a, 0x14, 0x2e, 0x75, 0x6d, 0x73, 0x50,
	0x62, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x31, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e,
	0x75, 0x6d, 0x73, 0x50, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x1a, 0x12,
	0x2e, 0x75, 0x6d, 0x73, 0x50, 0x62, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2c, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x12, 0x0d, 0x2e,
	0x75, 0x6d, 0x73, 0x50, 0x62, 0x2e, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x75,
	0x6d, 0x73, 0x50, 0x62, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x39, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x0e, 0x2e, 0x75, 0x6d, 0x73, 0x50, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x18, 0x2e, 0x75, 0x6d, 0x73, 0x50, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x68,
	0x69, 0x72, 0x64, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x09, 0x5a, 0x07, 0x2e,
	0x2f, 0x75, 0x6d, 0x73, 0x50, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_ums_proto_rawDescOnce sync.Once
	file_pb_ums_proto_rawDescData = file_pb_ums_proto_rawDesc
)

func file_pb_ums_proto_rawDescGZIP() []byte {
	file_pb_ums_proto_rawDescOnce.Do(func() {
		file_pb_ums_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_ums_proto_rawDescData)
	})
	return file_pb_ums_proto_rawDescData
}

var file_pb_ums_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_pb_ums_proto_goTypes = []any{
	(*IdReq)(nil),               // 0: umsPb.IdReq
	(*IdsReq)(nil),              // 1: umsPb.IdsReq
	(*IdResp)(nil),              // 2: umsPb.IdResp
	(*SuccessResp)(nil),         // 3: umsPb.SuccessResp
	(*SuccessIdResp)(nil),       // 4: umsPb.SuccessIdResp
	(*UserAddress)(nil),         // 5: umsPb.UserAddress
	(*UserAddressListResp)(nil), // 6: umsPb.UserAddressListResp
	(*UserCarts)(nil),           // 7: umsPb.UserCarts
	(*UserFeedback)(nil),        // 8: umsPb.UserFeedback
	(*UserThird)(nil),           // 9: umsPb.UserThird
	(*User)(nil),                // 10: umsPb.User
	(*UserForm)(nil),            // 11: umsPb.UserForm
	(*OpenIdReq)(nil),           // 12: umsPb.OpenIdReq
	(*BindReq)(nil),             // 13: umsPb.BindReq
	(*UserInfoResp)(nil),        // 14: umsPb.UserInfoResp
	(*PageReq)(nil),             // 15: umsPb.PageReq
	(*UserPageResp)(nil),        // 16: umsPb.UserPageResp
	(*UserThirdPageResp)(nil),   // 17: umsPb.UserThirdPageResp
}
var file_pb_ums_proto_depIdxs = []int32{
	5,  // 0: umsPb.UserAddressListResp.userAddress:type_name -> umsPb.UserAddress
	5,  // 1: umsPb.User.addresses:type_name -> umsPb.UserAddress
	10, // 2: umsPb.UserPageResp.list:type_name -> umsPb.User
	9,  // 3: umsPb.UserThirdPageResp.list:type_name -> umsPb.UserThird
	12, // 4: umsPb.ums.ByOpenId:input_type -> umsPb.OpenIdReq
	13, // 5: umsPb.ums.Bind:input_type -> umsPb.BindReq
	0,  // 6: umsPb.ums.UserGet:input_type -> umsPb.IdReq
	15, // 7: umsPb.ums.UserPage:input_type -> umsPb.PageReq
	11, // 8: umsPb.ums.UserAdd:input_type -> umsPb.UserForm
	11, // 9: umsPb.ums.UserUpdate:input_type -> umsPb.UserForm
	1,  // 10: umsPb.ums.UserDel:input_type -> umsPb.IdsReq
	15, // 11: umsPb.ums.UserThirdPage:input_type -> umsPb.PageReq
	14, // 12: umsPb.ums.ByOpenId:output_type -> umsPb.UserInfoResp
	14, // 13: umsPb.ums.Bind:output_type -> umsPb.UserInfoResp
	10, // 14: umsPb.ums.UserGet:output_type -> umsPb.User
	16, // 15: umsPb.ums.UserPage:output_type -> umsPb.UserPageResp
	4,  // 16: umsPb.ums.UserAdd:output_type -> umsPb.SuccessIdResp
	3,  // 17: umsPb.ums.UserUpdate:output_type -> umsPb.SuccessResp
	3,  // 18: umsPb.ums.UserDel:output_type -> umsPb.SuccessResp
	17, // 19: umsPb.ums.UserThirdPage:output_type -> umsPb.UserThirdPageResp
	12, // [12:20] is the sub-list for method output_type
	4,  // [4:12] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_pb_ums_proto_init() }
func file_pb_ums_proto_init() {
	if File_pb_ums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_ums_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_ums_proto_goTypes,
		DependencyIndexes: file_pb_ums_proto_depIdxs,
		MessageInfos:      file_pb_ums_proto_msgTypes,
	}.Build()
	File_pb_ums_proto = out.File
	file_pb_ums_proto_rawDesc = nil
	file_pb_ums_proto_goTypes = nil
	file_pb_ums_proto_depIdxs = nil
}
